
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSCOMMA CONSTANT DIVIDE EQUAL ID LPAREN MINUS PLUS RPAREN TIMESprogram : tensor EQUAL exprtensor : ID LPAREN index_expr RPARENtensor : IDuminusTensor : MINUS tensorexpr : MINUS expr %prec UMINUSindex_expr : index_tensorindex_expr : index_tensor COMMA index_exprindex_tensor : IDexpr : expr PLUS expr\n                | expr MINUS expr\n                | expr TIMES expr\n                | expr DIVIDE exprexpr : LPAREN expr RPARENexpr : CONSTANT\n                | tensor\n                | uminusTensor'
    
_lr_action_items = {'ID':([0,4,5,8,9,15,16,17,18,23,],[3,3,12,3,3,3,3,3,3,12,]),'$end':([1,3,6,7,10,11,19,20,22,24,25,26,27,28,],[0,-3,-15,-1,-14,-16,-5,-4,-2,-9,-10,-11,-12,-13,]),'EQUAL':([2,3,22,],[4,-3,-2,]),'LPAREN':([3,4,8,9,15,16,17,18,],[5,9,9,9,9,9,9,9,]),'PLUS':([3,6,7,10,11,19,20,21,22,24,25,26,27,28,],[-3,-15,15,-14,-16,-5,-4,15,-2,-9,-10,-11,-12,-13,]),'MINUS':([3,4,6,7,8,9,10,11,15,16,17,18,19,20,21,22,24,25,26,27,28,],[-3,8,-15,16,8,8,-14,-16,8,8,8,8,-5,-4,16,-2,-9,-10,-11,-12,-13,]),'TIMES':([3,6,7,10,11,19,20,21,22,24,25,26,27,28,],[-3,-15,17,-14,-16,-5,-4,17,-2,17,17,-11,-12,-13,]),'DIVIDE':([3,6,7,10,11,19,20,21,22,24,25,26,27,28,],[-3,-15,18,-14,-16,-5,-4,18,-2,18,18,-11,-12,-13,]),'RPAREN':([3,6,10,11,12,13,14,19,20,21,22,24,25,26,27,28,29,],[-3,-15,-14,-16,-8,22,-6,-5,-4,28,-2,-9,-10,-11,-12,-13,-7,]),'CONSTANT':([4,8,9,15,16,17,18,],[10,10,10,10,10,10,10,]),'COMMA':([12,14,],[-8,23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'tensor':([0,4,8,9,15,16,17,18,],[2,6,20,6,6,6,6,6,]),'expr':([4,8,9,15,16,17,18,],[7,19,21,24,25,26,27,]),'uminusTensor':([4,8,9,15,16,17,18,],[11,11,11,11,11,11,11,]),'index_expr':([5,23,],[13,29,]),'index_tensor':([5,23,],[14,14,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> tensor EQUAL expr','program',3,'p_program','expr_parser.py',50),
  ('tensor -> ID LPAREN index_expr RPAREN','tensor',4,'p_tensor_with_index','expr_parser.py',57),
  ('tensor -> ID','tensor',1,'p_tensor','expr_parser.py',61),
  ('uminusTensor -> MINUS tensor','uminusTensor',2,'p_uminus_tensor','expr_parser.py',65),
  ('expr -> MINUS expr','expr',2,'p_expr_uminus','expr_parser.py',69),
  ('index_expr -> index_tensor','index_expr',1,'p_index_expr_single','expr_parser.py',73),
  ('index_expr -> index_tensor COMMA index_expr','index_expr',3,'p_index_expr_comma','expr_parser.py',77),
  ('index_tensor -> ID','index_tensor',1,'p_index_tensor','expr_parser.py',81),
  ('expr -> expr PLUS expr','expr',3,'p_expr_op','expr_parser.py',85),
  ('expr -> expr MINUS expr','expr',3,'p_expr_op','expr_parser.py',86),
  ('expr -> expr TIMES expr','expr',3,'p_expr_op','expr_parser.py',87),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_op','expr_parser.py',88),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr_group','expr_parser.py',93),
  ('expr -> CONSTANT','expr',1,'p_expr_constant_tensor','expr_parser.py',97),
  ('expr -> tensor','expr',1,'p_expr_constant_tensor','expr_parser.py',98),
  ('expr -> uminusTensor','expr',1,'p_expr_constant_tensor','expr_parser.py',99),
]
